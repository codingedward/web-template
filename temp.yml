version: "3"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile-api
      target: production
    image: api_image
    container_name: api
    restart: always
    volumes:
      - node_modules:/app/node_modules
    networks:
      - frontend
      - backend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile-web
      target: production
    image: web_image
    container_name: web
    restart: always
    volumes:
      - node_modules:/app/node_modules
    networks:
      - frontend
      - backend

  web_server:
    image: nginx:1.17.6-alpine
    container_name: web_server
    restart: always
    ports:
      - "80:80"
      - "433:433"
    networks:
      - frontend
    volumes:
      - ./:/var/www/

  storage_server:
    image: minio/minio
    container_name: storage_server
    networks:
      - backend
    volumes:
      - minio:/data/
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: server /data

  prisma_server:
    image: prismagraphql/prisma:2.0
    restart: always
    ports:
      - "4466:4466"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: mysql
            host: db_server
            port: 3306
            user: root
            password: ${MYSQL_ROOT_PASSWORD}
    networks:
      - backend

  db_server:
    image: mysql:5.7
    container_name: db-server
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - backend
    volumes:
      - mysql:/var/lib/mysql

volumes:
  node_modules:
  mysql:
  minio:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
